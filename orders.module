<?php

/**
 * Implements hook_menu().
 */
function orders_menu() {
 
  $items['orders/example'] = array(
    'page callback' => 'flags',
    'page arguments' => array(2),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  
   $items['orders/form'] = array(
    'title'            => t('You are finishing the shopping process here'),
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('_select_form_item',),
    'type'             => MENU_CALLBACK,
    'access arguments' => array('allOrdersAdmin'),
  );

  return $items;
}




function orders_permission(){
	return array(
      'allOrdersAdmin' =>  array(
        'title' => t('Administer Orders'),
        'description' => t('Administer variables employed by Orders'),
      ),
    );
}

/*
 * Implmentacion de hook_block_info()
 */
function orders_block_info(){
  $blocks   = array();
  $blocks['fselect'] = array(
    'info' => t('Order'),
  );
  
  return $blocks;
}


function orders_block_view($delta = ''){
  $block = array();
  switch ($delta) {
    case 'fselect':
      $block['subject'] = '';
      $block['content'] = array(
        '#output'       => _get_query_invoices(),
      );
      break;
  }
    return $block;
}

function orders_page_build(&$page) {
 global $car;	
 drupal_add_js(drupal_get_path('module', 'orders') . "/js/orders.js");

}


function _get_price($nid){


	$query = db_query("select * from field_revision_field_precio where entity_id=$nid");

	$result = $query->fetchObject();

	return $result->field_precio_value;

	
}



function _get_query_invoices(){
	$query = db_query("SELECT node.title AS node_title, node.nid AS nid, flagging_node.flagging_id AS flagging_node_flagging_id, node.created AS node_created, 'flagging' AS field_data_field_number_flagging_entity_type, (flagging_node.uid IS NOT NULL) AS flagging_flagged, timestamp AS timestamp, 'node' AS field_data_field_precio_node_entity_type, 'node' AS field_data_field_discount_node_entity_type FROM  node node INNER JOIN flagging flagging_node ON node.nid = flagging_node.entity_id AND (flagging_node.fid = '1' AND flagging_node.uid = '1') WHERE (( (node.status = '1') )) ORDER BY node_created DESC LIMIT 10 OFFSET 0 ");

	$result = $query->fetchAll();

	return $result;


}

function _get_discount($nid){

	$query = db_query("select * from field_revision_field_discount where entity_id=$nid");

	$result = $query->fetchObject();

	return $result->field_precio_value;
}


function flags(){

	$view_name = 'flags';
	$display = 'page_1';
	 
	$view_content = views_get_view_result($view_name,$display);
    $precioPar=0;
	foreach ($view_content as $aInfo) {
		$title  = $aInfo->node_title;
	 	$nid    = $aInfo->nid;
	 	$flagid = $aInfo->flagging_node_flagging_id;
	 	$fecha  = $aInfo->timestamp;
	 	$precio = _get_price($nid);
	 	$discou = _get_discount($nid)/100;
	 	$precP  = $precio - ($precio*$discou);
	 	$number = $aInfo->field_field_number[0]['raw']['value'];
	 	$typeCat= $aInfo->field_field_types_of_cupcakes[0]['raw']['taxonomy_term']->name;
		$uid=$aInfo->flagging_node_uid;

	 	$precioPar = ($precP *$number)+$precioPar; 
	}
	
return $precioPar.'USD';
}


function _select_form_item ($form, &$form_state){
  $form = array();
  $c=0;
  $arrInfo = _get_query_invoices();
  $PTotal =flags();
  
  
  	$form['items']['pre'] = array(
      '#type' => 'item',
      '#markup' => t('The total amount for your puchase is '.$PTotal), 
	  '#weight' => 5, 
	  
     );

 	$form['items']['aceptar'] = array(
    '#type' => 'checkbox', 
  	'#title' => t('Do you agree with the info seen before?'), 
  	'#return_value' => 1, 
	'#default_value' => 0, 
    '#description' => t("If you check this box you're buying these cupcakes"),
     );
  

	$form['items']['actions'] = array('#type' => 'actions');
	$form['items']['actions']['submit'] = array(
	    '#type'  => 'submit',
	    '#value' => t('Submit'),
	  );
	$form['items']['actions']['cancel'] = array(
	  '#type'  => 'submit',
	  '#value' => t('Cancel'),
	);

  return $form;
  

}

function _select_form_item_submit($form, &$form_state){
    $items = $form_state['values'];
  
    $view_name = 'flags';
	$display = 'page_1';	 
	$view_content = views_get_view_result($view_name,$display);
    $precioPar=0;

	foreach ($view_content as $aInfo) {
		$title  = $aInfo->node_title;
	 	$nid    = $aInfo->nid;
	 	$flagid = $aInfo->flagging_node_flagging_id;
	 	$fecha  = $aInfo->timestamp;
	 	$precio=10;
	 	$discou = _get_discount($nid)/100;
	 	$precP  = $precio - ($precio*$discou);
	 	$number = $aInfo->field_field_number[0]['raw']['value'];
	 	$precioPar = $precP *$number; 
		$typeCat=$aInfo->field_field_types_of_cupcakes[0]['raw']['taxonomy_term']->name;
		$uid=$aInfo->flagging_node_uid;

		$norder = db_insert('orders') // Table name no longer needs {}
		->fields(array(
		  'entity_id' => $nid,
		  'uid' => $uid,
		  'cname' => $title,
		  'typetax'=>$typeCat,
		  'cnumber'=>$number,
		  'created'=>$fecha,
		  'discount'=>$discou,
		  'price'=>$precP,
		  'pinvoce'=>$precioPar,
		))
		->execute();

	}
	
	$num_deleted = db_delete('flagging')
    ->condition('uid', $uid)
    ->execute();
  
  drupal_set_message(t('Thanks for comming to our store'));
  drupal_goto('<front>');
  
}



